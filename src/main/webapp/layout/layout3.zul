<?page title="ZK Tweet"?>
<?link rel="stylesheet" type="text/css" href="/css/demo.css.dsp"?>
<zk>
	<zscript><![CDATA[
	import org.zkoss.zk.ui.util.*;
	
if (execution.isBrowser("ie7-")) {
	System.out.println(execution.isBrowser("ie7-"));
	Clients.showNotification("Internet Explorer 6/7 doesn't support in this demo!");
}
boolean firsttime = true;
void doOrientationChange(ClientInfoEvent evt) {
	
	if ("portrait".equals(evt.getOrientation())) {
		main.setWidth("100%");
		if (evt.getDesktopWidth() < 640)
			sv.setVisible(false);
	} else {
		if (!execution.isBrowser("mobile"))
			main.setWidth("80%");
		sv.setVisible(true);
	}
	if (!firsttime)
		Clients.resize(main);
	firsttime = false;
}
public class Tweet {
	String _author;
	String _content;
	public Tweet(String author, String content) {
		_author = author;
		_content = content;
	}
	public String getAuthor() {
		return _author;
	}
	public String getIcon() {
		return _author.toLowerCase();
	}
	public String getOwnerIcon() {
		return "owner-icon " + getIcon(); 
	}
	public String getAuthorIcon() {
		return "author-icon " + getIcon();
	}
	public String getContent() {
		return _content;
	}
	public int getTweets() {
		return new java.util.Random().nextInt(1000);
	}
	public int getFollowing() {
		return new java.util.Random().nextInt(1000);
	
	}
	public int getFollowers() {
		return new java.util.Random().nextInt(1000);	
	}
}

public class TweetsVM {
	List _tweets = new ArrayList();
	List _connects = new ArrayList();
	List _stories = new ArrayList();
	List _profiles = new ArrayList();
	static String[] authors = {"Alien", "Astronauta", "Bombero", "Comisario", "Hiphopper", "Mimo", "Mounstruo"};
	static String[] comments = {
		"ZK 6.5's responsive design enables you to use the same set of components & have it run everywhere, 	desktop & tablet!",
		"Top Contributor Simon Massey talks about implementing event-driven GUI patterns with ZK on IBM developerWorks",
		"ZK 6.5 & Tablet UI Design: Design UI that take advantage of tablet-specific user interaction methods.See Demo Now!",
		"Check out this small talk to know how to apply MVVM pattern in Java if you prefer to create application UI using pure Java ...",
		"This small talk will show how to use MVVM pattern within a Richlet to create your application UI using pure Java",
		"Follow us on the ZK official G+ page to get newest updates!",
		"If you haven't already, come check out ZK 6.5 & responsive design Demo!! Don't miss out on this one!!!",
		"ZK 6.0.2 Released! Supporting development in OSGi environment with few changes in ZK Bind specifications"
	};
	public TweetsVM() {
		for (int i = 0; i < 30; i++) {
			_tweets.add(new Tweet(authors[i%7], comments[i%7]));
			_connects.add(new Tweet(authors[(i+3)%7], comments[(i+3)%7]));
			_stories.add(new Tweet(authors[(i+5)%7], comments[(i+5)%7]));
		}
		for (int i = 0; i < 4; i++) {
			_profiles.add(new Tweet(authors[i%7], comments[i%7]));
		}
	}
	public List getProfiles() {
		return _profiles;
	}
	public List getTweets() {
		return _tweets;
	}
	public List getConnects() {
		return _connects;
	}
	public List getStories() {
		return _stories;
	}
}
]]></zscript>
	<tabbox xmlns:ca="client/attribute" ca:data-swipeable="true" id="main" sclass="main" width="${zk.mobile > 0 ? '100%' : '80%'}"
		vflex="1" onClientInfo="doOrientationChange(event)" tabscroll="false"
		apply="org.zkoss.bind.BindComposer" viewModel="@id('vm') @init('TweetsVM')">
	<!-- 	<custom-attributes org.zkoss.zul.image.preload="true" /> -->
		<tabs>
			<tab>
				<caption>
					<image sclass="home" />
					Home
				</caption>
			</tab>
			<tab>
				<caption>
					<image sclass="connect" />
					Connect
				</caption>
			</tab>
			<tab>
				<caption>
					<image sclass="discover" />
					Discover
				</caption>
			</tab>
		</tabs>
		<tabpanels vflex="1" hflex="1">
			<tabpanel vflex="1" hflex="1">
				<hlayout id="content" sclass="main-content" vflex="1">
					<scrollview id="sv" orient="vertical" vflex="1" hflex="1"
						children="@init(vm.profiles)">
						<template name="children" var="profile">
							<groupbox mold="3d" sclass="profile" hflex="1">
								<vlayout>
									<hlayout>
										<image sclass="@bind(profile.ownerIcon)" />
										<vlayout>
											<a sclass="fullname" label="@bind(profile.author)" />
											<label value="View my profile page" style="color:gray" />
										</vlayout>
									</hlayout>
									<hlayout sclass="status">
										<div sclass="vbar first-vbar" hflex="1">
											<label sclass="number" value="@bind(profile.tweets)" />
											<separator />
											<label sclass="text" value="TWEETS" />
										</div>
										<div sclass="vbar" hflex="1">
											<label sclass="number" value="@bind(profile.following)" />
											<separator />
											<label sclass="text" value="FOLLOWING" />
										</div>
										<div sclass="vbar" hflex="1">
											<label sclass="number" value="@bind(profile.followers)" />
											<separator />
											<label sclass="text" value="FOLLOWERS" />
										</div>
									</hlayout>
									<textbox rows="2" placeholder="Compose new Tweet..."
										multiline="true" hflex="1" />
								</vlayout>
							</groupbox>
						</template>
					</scrollview>
					<listbox model="@load(vm.connects)" vflex="1" hflex="1">
						<template name="model" var="tweet">
							<listitem>
								<listcell>
									<hlayout>
										<image sclass="@load(tweet.authorIcon)" />
										<div hflex="1">
											<label sclass="author" value="@load(tweet.author)" />
											<separator />
											<label width="90%" sclass="content" multiline="true"
												value="@load(tweet.content)" />
										</div>
									</hlayout>
								</listcell>
							</listitem>
						</template>
					</listbox>
				</hlayout>
			</tabpanel>
			<tabpanel sclass="connects" vflex="1" hflex="1">
				<listbox model="@load(vm.stories)" vflex="1" hflex="1">
					<template name="model" var="tweet">
						<listitem>
							<listcell>
								<hlayout>
									<image sclass="@load(tweet.authorIcon)" />
									<div hflex="1">
										<label sclass="author" value="@load(tweet.author)" />
										<label style="color:gray;font-style:italy" value="@zkoss" />
										<separator />
										<label width="90%" sclass="content" multiline="true"
											value="@load(tweet.content)" />
									</div>
								</hlayout>
							</listcell>
						</listitem>
					</template>
				</listbox>
			</tabpanel>
			<tabpanel sclass="stories" vflex="1" hflex="1">
				<listbox model="@load(vm.tweets)" vflex="1" hflex="1">
					<template name="model" var="tweet">
						<listitem>
							<listcell>
								<div>
									<label width="90%" sclass="content" multiline="true"
										value="@load(tweet.content)" />
									<separator />
									<image sclass="@load(tweet.authorIcon)" />
									<label style="color:gray;" value="Tweeted by " />
									<label style="color:gray;font-weight:bold" value="ZKoss" />
								</div>
							</listcell>
						</listitem>
					</template>
				</listbox>
			</tabpanel>
		</tabpanels>
	</tabbox>
<script if='${execution.serverName == "www.zkoss.org" or execution.serverName == "www.potix.com"}'><![CDATA[
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));

var gafn = function () {
if (window._gat) {
	gafn = null;
	try {
		var pageTracker = _gat._getTracker("UA-121377-3");
		pageTracker._setDomainName("zkoss.org");
		pageTracker._initData();
		pageTracker._trackPageview();

	} catch (e) {
	}
} else
	setTimeout(gafn, 1000);
};
gafn();
]]></script>
</zk>